@using VinylWorld.Models.Order
@model IEnumerable<VinylWorld.Models.Album.AlbumIndexVM>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if ((this.User.Identity.IsAuthenticated) && (this.User.IsInRole("Administrator")))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<form asp-controller="album" asp-action="Index" method="get">
    <p>
        Artist: <input type="text" name="SearchStringArtistName" />
        Genre: <input type="text" name="SearchStringGenreName" />

        <input type="submit" value="Filter" />
    </p>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.AlbumName)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.ArtistId)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.ArtistName)
            </th>
            @*<th>
            @Html.DisplayNameFor(model => model.GenreId)
        </th>*@
            <th>
                @Html.DisplayNameFor(model => model.GenreName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Picture)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Discount)
            </th>
            @if (this.User.Identity.IsAuthenticated)
            {
                <th>
                    Order
                </th>
            }
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AlbumName)
            </td>
            @*<td>
            @Html.DisplayFor(modelItem => item.ArtistId)
        </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.ArtistName)
            </td>
            @*<td>
            @Html.DisplayFor(modelItem => item.GenreId)
        </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.GenreName)
            </td>
            <td>
                <img src="@Html.DisplayFor(modelItem => item.Picture)" alt="Image" width="100" />
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Quantity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Discount)
            </td>
            @if (this.User.Identity.IsAuthenticated)
            {
                <td>
                    @await Html.PartialAsync("_OrderPartialView", new OrderConfirmVM
               {
                   AlbumId = item.Id

               })
                </td>
            }
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
        }
    </tbody>
</table>
